{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jsierra\\\\puntodelaguaapp\\\\frontend\\\\src\\\\LandingPage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { SignInAndUp } from 'supertokens-auth-react/recipe/emailpassword';\nimport Session from \"supertokens-auth-react/recipe/session\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LandingPage() {\n  _s();\n  let sessionContext = Session.useSessionContext();\n  if (sessionContext.loading) {\n    return null;\n  }\n  if (sessionContext.doesSessionExist) {\n    // We wrap this with <SessionAuth /> so that\n    // all claims are validated before showing the logged in UI.\n    // For example, if email verification is switched on, and\n    // the user's email is not verified, then <SessionAuth />\n    // will redirect to the email verification page.\n    return /*#__PURE__*/_jsxDEV(Session.SessionAuth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SignInAndUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(LandingPage, \"DclXUbFfynVNBVYV0ihbVIIFYv8=\", false, function () {\n  return [Session.useSessionContext];\n});\n_c = LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["React","SignInAndUp","Session","LandingPage","sessionContext","useSessionContext","loading","doesSessionExist"],"sources":["C:/Users/jsierra/puntodelaguaapp/frontend/src/LandingPage.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { SignInAndUp } from 'supertokens-auth-react/recipe/emailpassword';\r\nimport Session from \"supertokens-auth-react/recipe/session\";\r\nexport default function LandingPage() {\r\n    let sessionContext = Session.useSessionContext();\r\n    if (sessionContext.loading) {\r\n        return null;\r\n    }\r\n    if (sessionContext.doesSessionExist) {\r\n        // We wrap this with <SessionAuth /> so that\r\n        // all claims are validated before showing the logged in UI.\r\n        // For example, if email verification is switched on, and\r\n        // the user's email is not verified, then <SessionAuth />\r\n        // will redirect to the email verification page.\r\n        return (\r\n            <Session.SessionAuth>\r\n            </Session.SessionAuth>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <SignInAndUp />\r\n            </div>\r\n        )\r\n    }\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,6CAA6C;AACzE,OAAOC,OAAO,MAAM,uCAAuC;AAAC;AAC5D,eAAe,SAASC,WAAW,GAAG;EAAA;EAClC,IAAIC,cAAc,GAAGF,OAAO,CAACG,iBAAiB,EAAE;EAChD,IAAID,cAAc,CAACE,OAAO,EAAE;IACxB,OAAO,IAAI;EACf;EACA,IAAIF,cAAc,CAACG,gBAAgB,EAAE;IACjC;IACA;IACA;IACA;IACA;IACA,oBACI,QAAC,OAAO,CAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QACE;EAE9B,CAAC,MAAM;IACH,oBACI;MAAA,uBACI,QAAC,WAAW;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACb;EAEd;AACJ;AAAC,GAtBuBJ,WAAW;EAAA,QACVD,OAAO,CAACG,iBAAiB;AAAA;AAAA,KAD1BF,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}