{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jsierra\\\\puntodelaguaapp\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport SuperTokens from \"supertokens-auth-react\";\nimport Session, { SessionAuth } from \"supertokens-auth-react/recipe/session\";\nimport Home from \"./Home\";\nimport Auth from \"./Auth\";\nimport EmailPassword from \"supertokens-auth-react/recipe/emailpassword\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSuperTokens.init({\n  appInfo: {\n    appName: \"El Punto Del Agua\",\n    apiDomain: \"http://localhost:3001\",\n    websiteDomain: \"http://localhost:3000\"\n  },\n  // recipeList contains all the modules that you want to\n  // use from SuperTokens. See the full list here: https://supertokens.com/docs/guides\n  recipeList: [EmailPassword.init({\n    signInAndUpFeature: {\n      disableDefaultUI: true,\n      signUpForm: {\n        formFields: [{\n          id: \"email\",\n          label: \"Email\",\n          placeholder: \"Ingrese un email valido\"\n        }, {\n          id: \"password\",\n          label: \"contraseña\",\n          placeholder: \"Ingrese su contraseña\"\n        }, {\n          id: \"area\",\n          label: \"Area\",\n          placeholder: \"Area en la que labora\",\n          optional: true\n        }],\n        termsOfServiceLink: \"https://example.com/terms-of-service\",\n        privacyPolicyLink: \"https://example.com/privacy-policy\"\n      },\n      signInForm: {\n        formFields: [{\n          id: \"email\",\n          label: \"Email\",\n          placeholder: \"Ingrese un email valido\"\n        }, {\n          id: \"password\",\n          label: \"contraseña\",\n          placeholder: \"Ingrese su contraseña\"\n        }]\n      }\n    }\n  }), Session.init()],\n  getRedirectionURL: async context => {\n    if (context.action === \"TO_AUTH\") {\n      return \"/auth\";\n    }\n    ;\n  }\n});\nfunction App() {\n  _s();\n  let sessionContext = Session.useSessionContext();\n  if (sessionContext.loading) {\n    return null;\n  }\n  if (sessionContext.doesSessionExist) {\n    // We wrap this with <SessionAuth /> so that\n    // all claims are validated before showing the logged in UI.\n    // For example, if email verification is switched on, and\n    // the user's email is not verified, then <SessionAuth />\n    // will redirect to the email verification page.\n    return /*#__PURE__*/_jsxDEV(SessionAuth, {\n      children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(App, \"DclXUbFfynVNBVYV0ihbVIIFYv8=\", false, function () {\n  return [Session.useSessionContext];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["SuperTokens","Session","SessionAuth","Home","Auth","EmailPassword","init","appInfo","appName","apiDomain","websiteDomain","recipeList","signInAndUpFeature","disableDefaultUI","signUpForm","formFields","id","label","placeholder","optional","termsOfServiceLink","privacyPolicyLink","signInForm","getRedirectionURL","context","action","App","sessionContext","useSessionContext","loading","doesSessionExist"],"sources":["C:/Users/jsierra/puntodelaguaapp/frontend/src/App.tsx"],"sourcesContent":["import \"./App.css\";\nimport SuperTokens, { SuperTokensWrapper, getSuperTokensRoutesForReactRouterDom } from \"supertokens-auth-react\";\nimport Session, { SessionAuth } from \"supertokens-auth-react/recipe/session\";\nimport { Routes, BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport { SuperTokensConfig } from \"./config\";\nimport { SignInAndUp } from 'supertokens-auth-react/recipe/emailpassword';\nimport Auth from \"./Auth\";\nimport EmailPassword from \"supertokens-auth-react/recipe/emailpassword\";\n\n\nSuperTokens.init({  appInfo: {\n    appName: \"El Punto Del Agua\",\n    apiDomain: \"http://localhost:3001\",\n    websiteDomain: \"http://localhost:3000\",\n},\n// recipeList contains all the modules that you want to\n// use from SuperTokens. See the full list here: https://supertokens.com/docs/guides\nrecipeList: [ \n    EmailPassword.init({\n    signInAndUpFeature: {\n        disableDefaultUI: true,\n        signUpForm: {\n            formFields: [{\n                id: \"email\",\n                label: \"Email\",\n                placeholder: \"Ingrese un email valido\"\n            },\n            {\n                id: \"password\",\n                label: \"contraseña\",\n                placeholder: \"Ingrese su contraseña\"\n            },\n            {\n                id: \"area\",\n                label: \"Area\",\n                placeholder: \"Area en la que labora\",\n                optional: true\n            }\n        ],\n        termsOfServiceLink: \"https://example.com/terms-of-service\",\n        privacyPolicyLink: \"https://example.com/privacy-policy\",\n        },\n        signInForm: {\n            formFields: [{\n                id: \"email\",\n                label: \"Email\",\n                placeholder: \"Ingrese un email valido\"\n            },\n            {\n                id: \"password\",\n                label: \"contraseña\",\n                placeholder: \"Ingrese su contraseña\"\n            }\n        ]\n        }\n    }\n}), Session.init()], getRedirectionURL: async (context) => {\n    if (context.action === \"TO_AUTH\") {\n        return \"/auth\";\n    };\n}});\n\nfunction App() {\n    let sessionContext = Session.useSessionContext();\n    if (sessionContext.loading) {\n        return null;\n    }\n    if (sessionContext.doesSessionExist) {\n        // We wrap this with <SessionAuth /> so that\n        // all claims are validated before showing the logged in UI.\n        // For example, if email verification is switched on, and\n        // the user's email is not verified, then <SessionAuth />\n        // will redirect to the email verification page.\n        return (      \n        <SessionAuth>\n            <Home />\n        </SessionAuth>\n        )\n    } else {\n        return (\n            <div>\n                <Auth />\n            </div>\n        )\n    }\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,WAAW,MAAqE,wBAAwB;AAC/G,OAAOC,OAAO,IAAIC,WAAW,QAAQ,uCAAuC;AAE5E,OAAOC,IAAI,MAAM,QAAQ;AAGzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,aAAa,MAAM,6CAA6C;AAAC;AAGxEL,WAAW,CAACM,IAAI,CAAC;EAAGC,OAAO,EAAE;IACzBC,OAAO,EAAE,mBAAmB;IAC5BC,SAAS,EAAE,uBAAuB;IAClCC,aAAa,EAAE;EACnB,CAAC;EACD;EACA;EACAC,UAAU,EAAE,CACRN,aAAa,CAACC,IAAI,CAAC;IACnBM,kBAAkB,EAAE;MAChBC,gBAAgB,EAAE,IAAI;MACtBC,UAAU,EAAE;QACRC,UAAU,EAAE,CAAC;UACTC,EAAE,EAAE,OAAO;UACXC,KAAK,EAAE,OAAO;UACdC,WAAW,EAAE;QACjB,CAAC,EACD;UACIF,EAAE,EAAE,UAAU;UACdC,KAAK,EAAE,YAAY;UACnBC,WAAW,EAAE;QACjB,CAAC,EACD;UACIF,EAAE,EAAE,MAAM;UACVC,KAAK,EAAE,MAAM;UACbC,WAAW,EAAE,uBAAuB;UACpCC,QAAQ,EAAE;QACd,CAAC,CACJ;QACDC,kBAAkB,EAAE,sCAAsC;QAC1DC,iBAAiB,EAAE;MACnB,CAAC;MACDC,UAAU,EAAE;QACRP,UAAU,EAAE,CAAC;UACTC,EAAE,EAAE,OAAO;UACXC,KAAK,EAAE,OAAO;UACdC,WAAW,EAAE;QACjB,CAAC,EACD;UACIF,EAAE,EAAE,UAAU;UACdC,KAAK,EAAE,YAAY;UACnBC,WAAW,EAAE;QACjB,CAAC;MAEL;IACJ;EACJ,CAAC,CAAC,EAAEjB,OAAO,CAACK,IAAI,EAAE,CAAC;EAAEiB,iBAAiB,EAAE,MAAOC,OAAO,IAAK;IACvD,IAAIA,OAAO,CAACC,MAAM,KAAK,SAAS,EAAE;MAC9B,OAAO,OAAO;IAClB;IAAC;EACL;AAAC,CAAC,CAAC;AAEH,SAASC,GAAG,GAAG;EAAA;EACX,IAAIC,cAAc,GAAG1B,OAAO,CAAC2B,iBAAiB,EAAE;EAChD,IAAID,cAAc,CAACE,OAAO,EAAE;IACxB,OAAO,IAAI;EACf;EACA,IAAIF,cAAc,CAACG,gBAAgB,EAAE;IACjC;IACA;IACA;IACA;IACA;IACA,oBACA,QAAC,WAAW;MAAA,uBACR,QAAC,IAAI;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACE;EAElB,CAAC,MAAM;IACH,oBACI;MAAA,uBACI,QAAC,IAAI;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACN;EAEd;AACJ;AAAC,GAvBQJ,GAAG;EAAA,QACazB,OAAO,CAAC2B,iBAAiB;AAAA;AAAA,KADzCF,GAAG;AAyBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}