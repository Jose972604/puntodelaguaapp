{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    throw: verb(1),\n    return: verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PrimitiveArrayClaim = void 0;\nvar PrimitiveArrayClaim = /** @class */function () {\n  function PrimitiveArrayClaim(config) {\n    var _this = this;\n    this.validators = {\n      includes: function (val, maxAgeInSeconds, id) {\n        if (maxAgeInSeconds === void 0) {\n          maxAgeInSeconds = _this.defaultMaxAgeInSeconds;\n        }\n        return {\n          id: id !== undefined ? id : _this.id,\n          refresh: function (ctx) {\n            return _this.refresh(ctx);\n          },\n          shouldRefresh: function (payload, ctx) {\n            return _this.getValueFromPayload(payload, ctx) === undefined ||\n            // We know payload[this.id] is defined since the value is not undefined in this branch\n            maxAgeInSeconds !== undefined && payload[_this.id].t < Date.now() - maxAgeInSeconds * 1000;\n          },\n          validate: function (payload, ctx) {\n            return __awaiter(_this, void 0, void 0, function () {\n              var claimVal, ageInSeconds;\n              return __generator(this, function (_a) {\n                claimVal = this.getValueFromPayload(payload, ctx);\n                if (claimVal === undefined) {\n                  return [2 /*return*/, {\n                    isValid: false,\n                    reason: {\n                      message: \"value does not exist\",\n                      expectedToInclude: val,\n                      actualValue: claimVal\n                    }\n                  }];\n                }\n                ageInSeconds = (Date.now() - this.getLastFetchedTime(payload, ctx)) / 1000;\n                if (maxAgeInSeconds !== undefined && ageInSeconds > maxAgeInSeconds) {\n                  return [2 /*return*/, {\n                    isValid: false,\n                    reason: {\n                      message: \"expired\",\n                      ageInSeconds: ageInSeconds,\n                      maxAgeInSeconds: maxAgeInSeconds\n                    }\n                  }];\n                }\n                if (!claimVal.includes(val)) {\n                  return [2 /*return*/, {\n                    isValid: false,\n                    reason: {\n                      message: \"wrong value\",\n                      expectedToInclude: val,\n                      actualValue: claimVal\n                    }\n                  }];\n                }\n                return [2 /*return*/, {\n                  isValid: true\n                }];\n              });\n            });\n          }\n        };\n      },\n      excludes: function (val, maxAgeInSeconds, id) {\n        if (maxAgeInSeconds === void 0) {\n          maxAgeInSeconds = _this.defaultMaxAgeInSeconds;\n        }\n        return {\n          id: id !== undefined ? id : _this.id,\n          refresh: function (ctx) {\n            return _this.refresh(ctx);\n          },\n          shouldRefresh: function (payload, ctx) {\n            return _this.getValueFromPayload(payload, ctx) === undefined ||\n            // We know payload[this.id] is defined since the value is not undefined in this branch\n            maxAgeInSeconds !== undefined && payload[_this.id].t < Date.now() - maxAgeInSeconds * 1000;\n          },\n          validate: function (payload, ctx) {\n            return __awaiter(_this, void 0, void 0, function () {\n              var claimVal, ageInSeconds;\n              return __generator(this, function (_a) {\n                claimVal = this.getValueFromPayload(payload, ctx);\n                if (claimVal === undefined) {\n                  return [2 /*return*/, {\n                    isValid: false,\n                    reason: {\n                      message: \"value does not exist\",\n                      expectedToNotInclude: val,\n                      actualValue: claimVal\n                    }\n                  }];\n                }\n                ageInSeconds = (Date.now() - this.getLastFetchedTime(payload, ctx)) / 1000;\n                if (maxAgeInSeconds !== undefined && ageInSeconds > maxAgeInSeconds) {\n                  return [2 /*return*/, {\n                    isValid: false,\n                    reason: {\n                      message: \"expired\",\n                      ageInSeconds: ageInSeconds,\n                      maxAgeInSeconds: maxAgeInSeconds\n                    }\n                  }];\n                }\n                if (claimVal.includes(val)) {\n                  return [2 /*return*/, {\n                    isValid: false,\n                    reason: {\n                      message: \"wrong value\",\n                      expectedToNotInclude: val,\n                      actualValue: claimVal\n                    }\n                  }];\n                }\n                return [2 /*return*/, {\n                  isValid: true\n                }];\n              });\n            });\n          }\n        };\n      },\n      includesAll: function (val, maxAgeInSeconds, id) {\n        if (maxAgeInSeconds === void 0) {\n          maxAgeInSeconds = _this.defaultMaxAgeInSeconds;\n        }\n        return {\n          id: id !== undefined ? id : _this.id,\n          refresh: function (ctx) {\n            return _this.refresh(ctx);\n          },\n          shouldRefresh: function (payload, ctx) {\n            return _this.getValueFromPayload(payload, ctx) === undefined ||\n            // We know payload[this.id] is defined since the value is not undefined in this branch\n            maxAgeInSeconds !== undefined && payload[_this.id].t < Date.now() - maxAgeInSeconds * 1000;\n          },\n          validate: function (payload, ctx) {\n            return __awaiter(_this, void 0, void 0, function () {\n              var claimVal, ageInSeconds, claimSet, isValid;\n              return __generator(this, function (_a) {\n                claimVal = this.getValueFromPayload(payload, ctx);\n                if (claimVal === undefined) {\n                  return [2 /*return*/, {\n                    isValid: false,\n                    reason: {\n                      message: \"value does not exist\",\n                      expectedToInclude: val,\n                      actualValue: claimVal\n                    }\n                  }];\n                }\n                ageInSeconds = (Date.now() - this.getLastFetchedTime(payload, ctx)) / 1000;\n                if (maxAgeInSeconds !== undefined && ageInSeconds > maxAgeInSeconds) {\n                  return [2 /*return*/, {\n                    isValid: false,\n                    reason: {\n                      message: \"expired\",\n                      ageInSeconds: ageInSeconds,\n                      maxAgeInSeconds: maxAgeInSeconds\n                    }\n                  }];\n                }\n                claimSet = new Set(claimVal);\n                isValid = val.every(function (v) {\n                  return claimSet.has(v);\n                });\n                return [2 /*return*/, isValid ? {\n                  isValid: isValid\n                } : {\n                  isValid: isValid,\n                  reason: {\n                    message: \"wrong value\",\n                    expectedToInclude: val,\n                    actualValue: claimVal\n                  }\n                }];\n              });\n            });\n          }\n        };\n      },\n      excludesAll: function (val, maxAgeInSeconds, id) {\n        if (maxAgeInSeconds === void 0) {\n          maxAgeInSeconds = _this.defaultMaxAgeInSeconds;\n        }\n        return {\n          id: id !== undefined ? id : _this.id,\n          refresh: function (ctx) {\n            return _this.refresh(ctx);\n          },\n          shouldRefresh: function (payload, ctx) {\n            return _this.getValueFromPayload(payload, ctx) === undefined ||\n            // We know payload[this.id] is defined since the value is not undefined in this branch\n            maxAgeInSeconds !== undefined && payload[_this.id].t < Date.now() - maxAgeInSeconds * 1000;\n          },\n          validate: function (payload, ctx) {\n            return __awaiter(_this, void 0, void 0, function () {\n              var claimVal, ageInSeconds, claimSet, isValid;\n              return __generator(this, function (_a) {\n                claimVal = this.getValueFromPayload(payload, ctx);\n                if (claimVal === undefined) {\n                  return [2 /*return*/, {\n                    isValid: false,\n                    reason: {\n                      message: \"value does not exist\",\n                      expectedToNotInclude: val,\n                      actualValue: claimVal\n                    }\n                  }];\n                }\n                ageInSeconds = (Date.now() - this.getLastFetchedTime(payload, ctx)) / 1000;\n                if (maxAgeInSeconds !== undefined && ageInSeconds > maxAgeInSeconds) {\n                  return [2 /*return*/, {\n                    isValid: false,\n                    reason: {\n                      message: \"expired\",\n                      ageInSeconds: ageInSeconds,\n                      maxAgeInSeconds: maxAgeInSeconds\n                    }\n                  }];\n                }\n                claimSet = new Set(claimVal);\n                isValid = val.every(function (v) {\n                  return !claimSet.has(v);\n                });\n                return [2 /*return*/, isValid ? {\n                  isValid: isValid\n                } : {\n                  isValid: isValid,\n                  reason: {\n                    message: \"wrong value\",\n                    expectedToNotInclude: val,\n                    actualValue: claimVal\n                  }\n                }];\n              });\n            });\n          }\n        };\n      }\n    };\n    this.id = config.id;\n    this.refresh = config.refresh;\n    this.defaultMaxAgeInSeconds = config.defaultMaxAgeInSeconds;\n  }\n  PrimitiveArrayClaim.prototype.getValueFromPayload = function (payload, _userContext) {\n    return payload[this.id] !== undefined ? payload[this.id].v : undefined;\n  };\n  PrimitiveArrayClaim.prototype.getLastFetchedTime = function (payload, _userContext) {\n    return payload[this.id] !== undefined ? payload[this.id].t : undefined;\n  };\n  return PrimitiveArrayClaim;\n}();\nexports.PrimitiveArrayClaim = PrimitiveArrayClaim;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","Object","defineProperty","exports","PrimitiveArrayClaim","config","_this","validators","includes","val","maxAgeInSeconds","id","defaultMaxAgeInSeconds","undefined","refresh","ctx","shouldRefresh","payload","getValueFromPayload","Date","now","validate","claimVal","ageInSeconds","_a","isValid","reason","message","expectedToInclude","actualValue","getLastFetchedTime","excludes","expectedToNotInclude","includesAll","claimSet","Set","every","has","excludesAll","prototype","_userContext"],"sources":["C:/Users/jsierra/puntodelaguaapp/frontend/node_modules/supertokens-website/lib/build/claims/primitiveArrayClaim.js"],"sourcesContent":["\"use strict\";\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function(resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function(thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function() {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: []\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function() {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function(v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PrimitiveArrayClaim = void 0;\nvar PrimitiveArrayClaim = /** @class */ (function() {\n    function PrimitiveArrayClaim(config) {\n        var _this = this;\n        this.validators = {\n            includes: function(val, maxAgeInSeconds, id) {\n                if (maxAgeInSeconds === void 0) {\n                    maxAgeInSeconds = _this.defaultMaxAgeInSeconds;\n                }\n                return {\n                    id: id !== undefined ? id : _this.id,\n                    refresh: function(ctx) {\n                        return _this.refresh(ctx);\n                    },\n                    shouldRefresh: function(payload, ctx) {\n                        return (\n                            _this.getValueFromPayload(payload, ctx) === undefined ||\n                            // We know payload[this.id] is defined since the value is not undefined in this branch\n                            (maxAgeInSeconds !== undefined && payload[_this.id].t < Date.now() - maxAgeInSeconds * 1000)\n                        );\n                    },\n                    validate: function(payload, ctx) {\n                        return __awaiter(_this, void 0, void 0, function() {\n                            var claimVal, ageInSeconds;\n                            return __generator(this, function(_a) {\n                                claimVal = this.getValueFromPayload(payload, ctx);\n                                if (claimVal === undefined) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"value does not exist\",\n                                                expectedToInclude: val,\n                                                actualValue: claimVal\n                                            }\n                                        }\n                                    ];\n                                }\n                                ageInSeconds = (Date.now() - this.getLastFetchedTime(payload, ctx)) / 1000;\n                                if (maxAgeInSeconds !== undefined && ageInSeconds > maxAgeInSeconds) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"expired\",\n                                                ageInSeconds: ageInSeconds,\n                                                maxAgeInSeconds: maxAgeInSeconds\n                                            }\n                                        }\n                                    ];\n                                }\n                                if (!claimVal.includes(val)) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"wrong value\",\n                                                expectedToInclude: val,\n                                                actualValue: claimVal\n                                            }\n                                        }\n                                    ];\n                                }\n                                return [2 /*return*/, { isValid: true }];\n                            });\n                        });\n                    }\n                };\n            },\n            excludes: function(val, maxAgeInSeconds, id) {\n                if (maxAgeInSeconds === void 0) {\n                    maxAgeInSeconds = _this.defaultMaxAgeInSeconds;\n                }\n                return {\n                    id: id !== undefined ? id : _this.id,\n                    refresh: function(ctx) {\n                        return _this.refresh(ctx);\n                    },\n                    shouldRefresh: function(payload, ctx) {\n                        return (\n                            _this.getValueFromPayload(payload, ctx) === undefined ||\n                            // We know payload[this.id] is defined since the value is not undefined in this branch\n                            (maxAgeInSeconds !== undefined && payload[_this.id].t < Date.now() - maxAgeInSeconds * 1000)\n                        );\n                    },\n                    validate: function(payload, ctx) {\n                        return __awaiter(_this, void 0, void 0, function() {\n                            var claimVal, ageInSeconds;\n                            return __generator(this, function(_a) {\n                                claimVal = this.getValueFromPayload(payload, ctx);\n                                if (claimVal === undefined) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"value does not exist\",\n                                                expectedToNotInclude: val,\n                                                actualValue: claimVal\n                                            }\n                                        }\n                                    ];\n                                }\n                                ageInSeconds = (Date.now() - this.getLastFetchedTime(payload, ctx)) / 1000;\n                                if (maxAgeInSeconds !== undefined && ageInSeconds > maxAgeInSeconds) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"expired\",\n                                                ageInSeconds: ageInSeconds,\n                                                maxAgeInSeconds: maxAgeInSeconds\n                                            }\n                                        }\n                                    ];\n                                }\n                                if (claimVal.includes(val)) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"wrong value\",\n                                                expectedToNotInclude: val,\n                                                actualValue: claimVal\n                                            }\n                                        }\n                                    ];\n                                }\n                                return [2 /*return*/, { isValid: true }];\n                            });\n                        });\n                    }\n                };\n            },\n            includesAll: function(val, maxAgeInSeconds, id) {\n                if (maxAgeInSeconds === void 0) {\n                    maxAgeInSeconds = _this.defaultMaxAgeInSeconds;\n                }\n                return {\n                    id: id !== undefined ? id : _this.id,\n                    refresh: function(ctx) {\n                        return _this.refresh(ctx);\n                    },\n                    shouldRefresh: function(payload, ctx) {\n                        return (\n                            _this.getValueFromPayload(payload, ctx) === undefined ||\n                            // We know payload[this.id] is defined since the value is not undefined in this branch\n                            (maxAgeInSeconds !== undefined && payload[_this.id].t < Date.now() - maxAgeInSeconds * 1000)\n                        );\n                    },\n                    validate: function(payload, ctx) {\n                        return __awaiter(_this, void 0, void 0, function() {\n                            var claimVal, ageInSeconds, claimSet, isValid;\n                            return __generator(this, function(_a) {\n                                claimVal = this.getValueFromPayload(payload, ctx);\n                                if (claimVal === undefined) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"value does not exist\",\n                                                expectedToInclude: val,\n                                                actualValue: claimVal\n                                            }\n                                        }\n                                    ];\n                                }\n                                ageInSeconds = (Date.now() - this.getLastFetchedTime(payload, ctx)) / 1000;\n                                if (maxAgeInSeconds !== undefined && ageInSeconds > maxAgeInSeconds) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"expired\",\n                                                ageInSeconds: ageInSeconds,\n                                                maxAgeInSeconds: maxAgeInSeconds\n                                            }\n                                        }\n                                    ];\n                                }\n                                claimSet = new Set(claimVal);\n                                isValid = val.every(function(v) {\n                                    return claimSet.has(v);\n                                });\n                                return [\n                                    2 /*return*/,\n                                    isValid\n                                        ? { isValid: isValid }\n                                        : {\n                                              isValid: isValid,\n                                              reason: {\n                                                  message: \"wrong value\",\n                                                  expectedToInclude: val,\n                                                  actualValue: claimVal\n                                              }\n                                          }\n                                ];\n                            });\n                        });\n                    }\n                };\n            },\n            excludesAll: function(val, maxAgeInSeconds, id) {\n                if (maxAgeInSeconds === void 0) {\n                    maxAgeInSeconds = _this.defaultMaxAgeInSeconds;\n                }\n                return {\n                    id: id !== undefined ? id : _this.id,\n                    refresh: function(ctx) {\n                        return _this.refresh(ctx);\n                    },\n                    shouldRefresh: function(payload, ctx) {\n                        return (\n                            _this.getValueFromPayload(payload, ctx) === undefined ||\n                            // We know payload[this.id] is defined since the value is not undefined in this branch\n                            (maxAgeInSeconds !== undefined && payload[_this.id].t < Date.now() - maxAgeInSeconds * 1000)\n                        );\n                    },\n                    validate: function(payload, ctx) {\n                        return __awaiter(_this, void 0, void 0, function() {\n                            var claimVal, ageInSeconds, claimSet, isValid;\n                            return __generator(this, function(_a) {\n                                claimVal = this.getValueFromPayload(payload, ctx);\n                                if (claimVal === undefined) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"value does not exist\",\n                                                expectedToNotInclude: val,\n                                                actualValue: claimVal\n                                            }\n                                        }\n                                    ];\n                                }\n                                ageInSeconds = (Date.now() - this.getLastFetchedTime(payload, ctx)) / 1000;\n                                if (maxAgeInSeconds !== undefined && ageInSeconds > maxAgeInSeconds) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"expired\",\n                                                ageInSeconds: ageInSeconds,\n                                                maxAgeInSeconds: maxAgeInSeconds\n                                            }\n                                        }\n                                    ];\n                                }\n                                claimSet = new Set(claimVal);\n                                isValid = val.every(function(v) {\n                                    return !claimSet.has(v);\n                                });\n                                return [\n                                    2 /*return*/,\n                                    isValid\n                                        ? { isValid: isValid }\n                                        : {\n                                              isValid: isValid,\n                                              reason: {\n                                                  message: \"wrong value\",\n                                                  expectedToNotInclude: val,\n                                                  actualValue: claimVal\n                                              }\n                                          }\n                                ];\n                            });\n                        });\n                    }\n                };\n            }\n        };\n        this.id = config.id;\n        this.refresh = config.refresh;\n        this.defaultMaxAgeInSeconds = config.defaultMaxAgeInSeconds;\n    }\n    PrimitiveArrayClaim.prototype.getValueFromPayload = function(payload, _userContext) {\n        return payload[this.id] !== undefined ? payload[this.id].v : undefined;\n    };\n    PrimitiveArrayClaim.prototype.getLastFetchedTime = function(payload, _userContext) {\n        return payload[this.id] !== undefined ? payload[this.id].t : undefined;\n    };\n    return PrimitiveArrayClaim;\n})();\nexports.PrimitiveArrayClaim = PrimitiveArrayClaim;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}