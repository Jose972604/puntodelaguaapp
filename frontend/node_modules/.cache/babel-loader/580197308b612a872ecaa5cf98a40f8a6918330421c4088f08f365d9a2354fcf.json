{"ast":null,"code":"\"use strict\";\n\n/* Copyright (c) 2020, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    throw: verb(1),\n    return: verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addInterceptorsToXMLHttpRequest = void 0;\nvar utils_1 = require(\"./utils\");\nvar fetch_1 = require(\"./fetch\");\nvar logger_1 = require(\"./logger\");\nvar windowHandler_1 = require(\"./utils/windowHandler\");\nvar processState_1 = require(\"./processState\");\nvar XHR_EVENTS = [\"readystatechange\", \"abort\", \"error\", \"load\", \"loadend\", \"loadstart\", \"progress\", \"timeout\"];\nfunction addInterceptorsToXMLHttpRequest() {\n  var firstEventLoopDone = false;\n  setTimeout(function () {\n    return firstEventLoopDone = true;\n  }, 0);\n  var oldXMLHttpRequest = XMLHttpRequest;\n  (0, logger_1.logDebugMessage)(\"addInterceptorsToXMLHttpRequest called\");\n  // create XMLHttpRequest proxy object\n  // define constructor for my proxy object\n  XMLHttpRequest = function () {\n    var actual = new oldXMLHttpRequest();\n    var delayActualCalls = !firstEventLoopDone;\n    function delayIfNecessary(cb) {\n      if (delayActualCalls) {\n        setTimeout(function () {\n          cb();\n        }, 0);\n      } else {\n        cb();\n      }\n    }\n    var self = this;\n    var listOfFunctionCallsInProxy = [];\n    var requestHeaders = [];\n    var customGetterValues = {};\n    var customResponseHeaders;\n    var eventHandlers = new Map();\n    // We define these during open\n    // let method: string = \"\";\n    var url = \"\";\n    var doNotDoInterception = false;\n    var preRequestIdToken = undefined;\n    var body;\n    // we do not provide onerror cause that is fired only on\n    // network level failures and nothing else. If a status code is > 400,\n    // then onload and onreadystatechange are called.\n    // Setting up props (event handlers) that we use in event handlers\n    // These require processing the response (and possibly retrying) before they are forwarded to the user\n    self.onload = null;\n    self.onreadystatechange = null;\n    self.onloadend = null;\n    // TODO: add support for other event listener options\n    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#parameters\n    self.addEventListener = function (type, listener, _options) {\n      var handlers = eventHandlers.get(type);\n      if (handlers === undefined) {\n        handlers = new Set();\n        eventHandlers.set(type, handlers);\n      }\n      handlers.add(listener);\n    };\n    self.removeEventListener = function (type, listener) {\n      var handlers = eventHandlers.get(type);\n      if (handlers === undefined) {\n        handlers = new Set();\n        eventHandlers.set(type, handlers);\n      }\n      handlers.delete(listener);\n    };\n    function redispatchEvent(name, ev) {\n      var handlers = eventHandlers.get(name);\n      (0, logger_1.logDebugMessage)(\"XHRInterceptor dispatching \".concat(ev.type, \" to \").concat(handlers ? handlers.size : 0, \" listeners\"));\n      if (handlers) {\n        Array.from(handlers).forEach(function (handler) {\n          return handler.apply(self, [ev]);\n        });\n      }\n    }\n    function handleRetryPostRefreshing() {\n      return __awaiter(this, void 0, void 0, function () {\n        var refreshResult, retryXhr;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (preRequestIdToken === undefined) {\n                throw new Error(\"Should never come here..\");\n              }\n              (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleRetryPostRefreshing: preRequestIdToken \" + preRequestIdToken.status);\n              return [4 /*yield*/, (0, fetch_1.onUnauthorisedResponse)(preRequestIdToken)];\n            case 1:\n              refreshResult = _a.sent();\n              if (refreshResult.result !== \"RETRY\") {\n                (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleRetryPostRefreshing: Not retrying original request \" + !!refreshResult.error);\n                if (refreshResult.error !== undefined) {\n                  // this will cause the responseText of the self to be updated\n                  // to the error message and make the status code the same as\n                  // what the error's status code is.\n                  throw refreshResult.error;\n                }\n                // it can come here if refreshResult.result is SESSION_EXPIRED.\n                // in that case, the status of self is already 401. So we let it\n                // pass through.\n                return [2 /*return*/, true];\n              }\n              (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleRetryPostRefreshing: Retrying original request\");\n              retryXhr = new oldXMLHttpRequest();\n              setUpXHR(self, retryXhr, true);\n              // this also calls the send function with the appropriate body\n              listOfFunctionCallsInProxy.forEach(function (i) {\n                i(retryXhr);\n              });\n              sendXHR(retryXhr, body);\n              return [2 /*return*/, false];\n          }\n        });\n      });\n    }\n    function handleResponse(xhr) {\n      return __awaiter(this, void 0, void 0, function () {\n        var status_1, headers, idRefreshToken, antiCsrfToken, tok, frontToken, err_1, resp;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (doNotDoInterception) {\n                (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: Returning without interception\");\n                return [2 /*return*/, true];\n              }\n              _a.label = 1;\n            case 1:\n              _a.trys.push([1, 20,, 24]);\n              _a.label = 2;\n            case 2:\n              _a.trys.push([2,, 14, 19]);\n              (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: Interception started\");\n              processState_1.ProcessState.getInstance().addState(processState_1.PROCESS_STATE.CALLING_INTERCEPTION_RESPONSE);\n              status_1 = xhr.status;\n              headers = new Headers(xhr.getAllResponseHeaders().trim().split(\"\\r\\n\").map(function (line) {\n                return line.split(\": \");\n              }));\n              idRefreshToken = headers.get(\"id-refresh-token\");\n              if (!idRefreshToken) return [3 /*break*/, 4];\n              (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: Setting sIRTFrontend: \" + idRefreshToken);\n              return [4 /*yield*/, (0, fetch_1.setIdRefreshToken)(idRefreshToken, status_1)];\n            case 3:\n              _a.sent();\n              _a.label = 4;\n            case 4:\n              if (!(status_1 === fetch_1.default.config.sessionExpiredStatusCode)) return [3 /*break*/, 6];\n              (0, logger_1.logDebugMessage)(\"responseInterceptor: Status code is: \" + status_1);\n              return [4 /*yield*/, handleRetryPostRefreshing()];\n            case 5:\n              return [2 /*return*/, _a.sent()];\n            case 6:\n              if (!(status_1 === fetch_1.default.config.invalidClaimStatusCode)) return [3 /*break*/, 8];\n              return [4 /*yield*/, (0, fetch_1.onInvalidClaimResponse)({\n                data: JSON.parse(xhr.responseText)\n              })];\n            case 7:\n              _a.sent();\n              _a.label = 8;\n            case 8:\n              antiCsrfToken = headers.get(\"anti-csrf\");\n              if (!antiCsrfToken) return [3 /*break*/, 11];\n              return [4 /*yield*/, (0, fetch_1.getIdRefreshToken)(true)];\n            case 9:\n              tok = _a.sent();\n              if (!(tok.status === \"EXISTS\")) return [3 /*break*/, 11];\n              (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: Setting anti-csrf token\");\n              return [4 /*yield*/, fetch_1.AntiCsrfToken.setItem(tok.token, antiCsrfToken)];\n            case 10:\n              _a.sent();\n              _a.label = 11;\n            case 11:\n              frontToken = headers.get(\"front-token\");\n              if (!frontToken) return [3 /*break*/, 13];\n              (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: Setting sFrontToken: \" + frontToken);\n              return [4 /*yield*/, fetch_1.FrontToken.setItem(frontToken)];\n            case 12:\n              _a.sent();\n              _a.label = 13;\n            case 13:\n              return [2 /*return*/, true];\n            case 14:\n              (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: doFinallyCheck running\");\n              return [4 /*yield*/, (0, fetch_1.getIdRefreshToken)(false)];\n            case 15:\n              if (!!(_a.sent().status === \"EXISTS\")) return [3 /*break*/, 18];\n              (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: sIRTFrontend doesn't exist, so removing anti-csrf and sFrontToken\");\n              return [4 /*yield*/, fetch_1.AntiCsrfToken.removeToken()];\n            case 16:\n              _a.sent();\n              return [4 /*yield*/, fetch_1.FrontToken.removeToken()];\n            case 17:\n              _a.sent();\n              _a.label = 18;\n            case 18:\n              return [7 /*endfinally*/];\n            case 19:\n              return [3 /*break*/, 24];\n            case 20:\n              err_1 = _a.sent();\n              (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: caught error\");\n              if (!(err_1.status !== undefined)) return [3 /*break*/, 22];\n              return [4 /*yield*/, getXMLHttpStatusAndResponseTextFromFetchResponse(err_1)];\n            case 21:\n              resp = _a.sent();\n              customGetterValues[\"status\"] = resp.status;\n              customGetterValues[\"statusText\"] = resp.statusText;\n              customGetterValues[\"responseType\"] = resp.responseType;\n              customResponseHeaders = resp.headers;\n              if (resp.responseType === \"json\") {\n                try {\n                  customGetterValues[\"response\"] = JSON.parse(resp.responseText);\n                } catch (_b) {\n                  customGetterValues[\"response\"] = resp.responseText;\n                }\n              } else {\n                customGetterValues[\"response\"] = resp.responseText;\n              }\n              customGetterValues[\"responseText\"] = resp.responseText;\n              return [3 /*break*/, 23];\n            case 22:\n              // Here we only need to handle fetch related errors, from the refresh endpoint called by the retry\n              // So we should only get network level errors here\n              redispatchEvent(\"error\", new Event(\"error\"));\n              _a.label = 23;\n            case 23:\n              return [2 /*return*/, true];\n            case 24:\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n\n    self.open = function (_, u) {\n      (0, logger_1.logDebugMessage)(\"XHRInterceptor.open called\");\n      var args = arguments;\n      listOfFunctionCallsInProxy.push(function (xhr) {\n        xhr.open.apply(xhr, args);\n      });\n      // method = m;\n      url = u;\n      try {\n        doNotDoInterception = typeof url === \"string\" && !(0, utils_1.shouldDoInterceptionBasedOnUrl)(url, fetch_1.default.config.apiDomain, fetch_1.default.config.cookieDomain) || typeof url !== \"string\" && !(0, utils_1.shouldDoInterceptionBasedOnUrl)(url.toString(), fetch_1.default.config.apiDomain, fetch_1.default.config.cookieDomain);\n      } catch (err) {\n        if (err.message === \"Please provide a valid domain name\") {\n          (0, logger_1.logDebugMessage)(\"XHRInterceptor.open: Trying shouldDoInterceptionBasedOnUrl with location.origin\");\n          // .origin gives the port as well..\n          doNotDoInterception = !(0, utils_1.shouldDoInterceptionBasedOnUrl)(windowHandler_1.default.getReferenceOrThrow().windowHandler.location.getOrigin(), fetch_1.default.config.apiDomain, fetch_1.default.config.cookieDomain);\n        } else {\n          throw err;\n        }\n      }\n      // here we use the apply syntax cause there are other optional args that\n      // can be passed by the user.\n      delayIfNecessary(function () {\n        return actual.open.apply(actual, args);\n      });\n    };\n    self.send = function (inputBody) {\n      body = inputBody;\n      sendXHR(actual, body);\n    };\n    self.setRequestHeader = function (name, value) {\n      if (doNotDoInterception) {\n        delayIfNecessary(function () {\n          return actual.setRequestHeader(name, value);\n        });\n        return;\n      }\n      // We need to do this, because if there is another interceptor wrapping this (e.g.: the axios interceptor)\n      // then the anti-csrf token they add would be concatenated to the anti-csrf token added by this interceptor\n      if (name === \"anti-csrf\") {\n        return;\n      }\n      listOfFunctionCallsInProxy.push(function (xhr) {\n        xhr.setRequestHeader(name, value);\n      });\n      // The original version \"combines\" headers according to MDN.\n      requestHeaders.push({\n        name: name,\n        value: value\n      });\n      delayIfNecessary(function () {\n        return actual.setRequestHeader(name, value);\n      });\n    };\n    var copiedProps = undefined;\n    setUpXHR(self, actual, false);\n    function setUpXHR(self, xhr, isRetry) {\n      var responseProcessed;\n      var delayedEvents = [\"load\", \"loadend\", \"readystatechange\"];\n      (0, logger_1.logDebugMessage)(\"XHRInterceptor.setUpXHR called\");\n      var _loop_1 = function (name_1) {\n        (0, logger_1.logDebugMessage)(\"XHRInterceptor added listener for event \".concat(name_1));\n        xhr.addEventListener(name_1, function (ev) {\n          (0, logger_1.logDebugMessage)(\"XHRInterceptor got event \".concat(name_1));\n          if (!delayedEvents.includes(name_1)) {\n            redispatchEvent(name_1, ev);\n          }\n        });\n      };\n      for (var _i = 0, XHR_EVENTS_1 = XHR_EVENTS; _i < XHR_EVENTS_1.length; _i++) {\n        var name_1 = XHR_EVENTS_1[_i];\n        _loop_1(name_1);\n      }\n      xhr.onload = function (ev) {\n        if (responseProcessed === undefined) {\n          responseProcessed = handleResponse(xhr);\n        }\n        responseProcessed.then(function (callself) {\n          if (!callself) {\n            return;\n          }\n          if (self.onload) {\n            self.onload(ev);\n          }\n          redispatchEvent(\"load\", ev);\n        });\n      };\n      xhr.onreadystatechange = function (ev) {\n        // In local files, status is 0 upon success in Mozilla Firefox\n        if (xhr.readyState === oldXMLHttpRequest.DONE) {\n          if (responseProcessed === undefined) {\n            responseProcessed = handleResponse(xhr);\n          }\n          responseProcessed.then(function (callself) {\n            if (!callself) {\n              return;\n            }\n            if (self.onreadystatechange) self.onreadystatechange(ev);\n            redispatchEvent(\"readystatechange\", ev);\n          });\n        } else {\n          if (self.onreadystatechange) {\n            self.onreadystatechange(ev);\n          }\n          redispatchEvent(\"readystatechange\", ev);\n        }\n      };\n      xhr.onloadend = function (ev) {\n        if (responseProcessed === undefined) {\n          responseProcessed = handleResponse(xhr);\n        }\n        responseProcessed.then(function (callself) {\n          if (!callself) {\n            return;\n          }\n          if (self.onloadend) {\n            self.onloadend(ev);\n          }\n          redispatchEvent(\"loadend\", ev);\n        });\n      };\n      self.getAllResponseHeaders = function () {\n        var headersString;\n        if (customResponseHeaders) {\n          headersString = \"\";\n          customResponseHeaders.forEach(function (v, k) {\n            return headersString += \"\".concat(k, \": \").concat(v, \"\\r\\n\");\n          });\n        } else {\n          headersString = xhr.getAllResponseHeaders();\n        }\n        // We use this \"fake-header\" to signal other interceptors (axios) that this is done\n        // in case both is applied\n        return headersString + \"x-supertokens-xhr-intercepted: true\\r\\n\";\n      };\n      self.getResponseHeader = function (name) {\n        if (name === \"x-supertokens-xhr-intercepted\") {\n          return \"true\";\n        }\n        if (customResponseHeaders) {\n          return customResponseHeaders.get(name);\n        }\n        return xhr.getResponseHeader(name);\n      };\n      if (copiedProps === undefined) {\n        copiedProps = [];\n        // iterate all properties in actual to proxy them according to their type\n        // For functions, we call actual and return the result\n        // For non-functions, we make getters/setters\n        // If the property already exists on self, then don't proxy it\n        for (var prop in xhr) {\n          // skip properties we already have - this will skip both the above defined properties\n          // that we don't want to proxy and skip properties on the prototype belonging to Object\n          if (!(prop in self)) {\n            // We save these props into an array - in case we need to set up a retry XHR\n            copiedProps.push(prop);\n          }\n        }\n      }\n      var _loop_2 = function (prop) {\n        if (typeof xhr[prop] === \"function\") {\n          // define our own property that calls the same method on the actual\n          Object.defineProperty(self, prop, {\n            configurable: true,\n            value: function () {\n              var args = arguments;\n              if (!isRetry) {\n                listOfFunctionCallsInProxy.push(function (xhr) {\n                  xhr[prop].apply(xhr, args);\n                });\n              }\n              return xhr[prop].apply(xhr, args);\n            }\n          });\n        } else {\n          // define our own property that just gets or sets the same prop on the actual\n          Object.defineProperty(self, prop, {\n            configurable: true,\n            get: function () {\n              if (customGetterValues[prop] !== undefined) {\n                return customGetterValues[prop];\n              }\n              return xhr[prop];\n            },\n            set: function (val) {\n              if (!isRetry) {\n                listOfFunctionCallsInProxy.push(function (xhr) {\n                  xhr[prop] = val;\n                });\n              }\n              (0, logger_1.logDebugMessage)(\"XHRInterceptor.set[\".concat(prop, \"] = \").concat(val));\n              xhr[prop] = val;\n            }\n          });\n        }\n      };\n      for (var _a = 0, copiedProps_1 = copiedProps; _a < copiedProps_1.length; _a++) {\n        var prop = copiedProps_1[_a];\n        _loop_2(prop);\n      }\n    }\n    function sendXHR(xhr, body) {\n      var _this = this;\n      (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: called\");\n      (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Value of doNotDoInterception: \" + doNotDoInterception);\n      if (doNotDoInterception) {\n        (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Returning without interception\");\n        delayIfNecessary(function () {\n          return xhr.send(body);\n        });\n        return;\n      }\n      (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Interception started\");\n      processState_1.ProcessState.getInstance().addState(processState_1.PROCESS_STATE.CALLING_INTERCEPTION_REQUEST);\n      delayIfNecessary(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var antiCsrfToken;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4 /*yield*/, (0, fetch_1.getIdRefreshToken)(true)];\n              case 1:\n                preRequestIdToken = _a.sent();\n                if (!(preRequestIdToken.status === \"EXISTS\")) return [3 /*break*/, 3];\n                return [4 /*yield*/, fetch_1.AntiCsrfToken.getToken(preRequestIdToken.token)];\n              case 2:\n                antiCsrfToken = _a.sent();\n                if (antiCsrfToken !== undefined) {\n                  (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Adding anti-csrf token to request\");\n                  xhr.setRequestHeader(\"anti-csrf\", antiCsrfToken);\n                }\n                _a.label = 3;\n              case 3:\n                if (fetch_1.default.config.autoAddCredentials) {\n                  (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Adding credentials include\");\n                  self.withCredentials = true;\n                }\n                if (!requestHeaders.some(function (i) {\n                  return i.name === \"rid\";\n                })) {\n                  (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Adding rid header: anti-csrf\");\n                  xhr.setRequestHeader(\"rid\", \"anti-csrf\");\n                } else {\n                  (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: rid header was already there in request\");\n                }\n                (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Making user's http call\");\n                return [2 /*return*/, xhr.send(body)];\n            }\n          });\n        });\n      });\n    }\n  };\n  XMLHttpRequest.__original = oldXMLHttpRequest;\n}\nexports.addInterceptorsToXMLHttpRequest = addInterceptorsToXMLHttpRequest;\nfunction getXMLHttpStatusAndResponseTextFromFetchResponse(response) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contentType, data, responseType, _a, _b, _c;\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          contentType = response.headers.get(\"content-type\");\n          data = \"\";\n          responseType = \"text\";\n          if (!(contentType === null)) return [3 /*break*/, 5];\n          _d.label = 1;\n        case 1:\n          _d.trys.push([1, 3,, 4]);\n          return [4 /*yield*/, response.text()];\n        case 2:\n          data = _d.sent();\n          return [3 /*break*/, 4];\n        case 3:\n          _a = _d.sent();\n          data = \"\";\n          return [3 /*break*/, 4];\n        case 4:\n          return [3 /*break*/, 9];\n        case 5:\n          if (!contentType.includes(\"application/json\")) return [3 /*break*/, 7];\n          responseType = \"json\";\n          _c = (_b = JSON).stringify;\n          return [4 /*yield*/, response.json()];\n        case 6:\n          data = _c.apply(_b, [_d.sent()]);\n          return [3 /*break*/, 9];\n        case 7:\n          if (!contentType.includes(\"text/\")) return [3 /*break*/, 9];\n          return [4 /*yield*/, response.text()];\n        case 8:\n          data = _d.sent();\n          _d.label = 9;\n        case 9:\n          return [2 /*return*/, {\n            status: response.status,\n            responseText: data,\n            statusText: response.statusText,\n            responseType: responseType,\n            headers: response.headers\n          }];\n      }\n    });\n  });\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","Object","defineProperty","exports","addInterceptorsToXMLHttpRequest","utils_1","require","fetch_1","logger_1","windowHandler_1","processState_1","XHR_EVENTS","firstEventLoopDone","setTimeout","oldXMLHttpRequest","XMLHttpRequest","logDebugMessage","actual","delayActualCalls","delayIfNecessary","cb","self","listOfFunctionCallsInProxy","requestHeaders","customGetterValues","customResponseHeaders","eventHandlers","Map","url","doNotDoInterception","preRequestIdToken","undefined","onload","onreadystatechange","onloadend","addEventListener","type","listener","_options","handlers","get","Set","set","add","removeEventListener","delete","redispatchEvent","name","ev","concat","size","Array","from","forEach","handler","handleRetryPostRefreshing","refreshResult","retryXhr","_a","Error","status","onUnauthorisedResponse","error","setUpXHR","i","sendXHR","handleResponse","xhr","status_1","headers","idRefreshToken","antiCsrfToken","tok","frontToken","err_1","resp","ProcessState","getInstance","addState","PROCESS_STATE","CALLING_INTERCEPTION_RESPONSE","Headers","getAllResponseHeaders","trim","split","map","line","setIdRefreshToken","default","config","sessionExpiredStatusCode","invalidClaimStatusCode","onInvalidClaimResponse","data","JSON","parse","responseText","getIdRefreshToken","AntiCsrfToken","setItem","token","FrontToken","removeToken","getXMLHttpStatusAndResponseTextFromFetchResponse","statusText","responseType","_b","Event","open","u","args","arguments","shouldDoInterceptionBasedOnUrl","apiDomain","cookieDomain","toString","err","message","getReferenceOrThrow","windowHandler","location","getOrigin","send","inputBody","setRequestHeader","copiedProps","isRetry","responseProcessed","delayedEvents","_loop_1","name_1","includes","_i","XHR_EVENTS_1","callself","readyState","DONE","headersString","k","getResponseHeader","prop","_loop_2","configurable","val","copiedProps_1","_this","CALLING_INTERCEPTION_REQUEST","getToken","autoAddCredentials","withCredentials","some","__original","response","contentType","_c","_d","text","stringify","json"],"sources":["C:/Users/jsierra/puntodelaguaapp/frontend/node_modules/supertokens-website/lib/build/xmlhttprequest.js"],"sourcesContent":["\"use strict\";\n/* Copyright (c) 2020, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function(thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function(resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function(resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function(thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function() {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: []\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function() {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function(v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addInterceptorsToXMLHttpRequest = void 0;\nvar utils_1 = require(\"./utils\");\nvar fetch_1 = require(\"./fetch\");\nvar logger_1 = require(\"./logger\");\nvar windowHandler_1 = require(\"./utils/windowHandler\");\nvar processState_1 = require(\"./processState\");\nvar XHR_EVENTS = [\"readystatechange\", \"abort\", \"error\", \"load\", \"loadend\", \"loadstart\", \"progress\", \"timeout\"];\nfunction addInterceptorsToXMLHttpRequest() {\n    var firstEventLoopDone = false;\n    setTimeout(function() {\n        return (firstEventLoopDone = true);\n    }, 0);\n    var oldXMLHttpRequest = XMLHttpRequest;\n    (0, logger_1.logDebugMessage)(\"addInterceptorsToXMLHttpRequest called\");\n    // create XMLHttpRequest proxy object\n    // define constructor for my proxy object\n    XMLHttpRequest = function() {\n        var actual = new oldXMLHttpRequest();\n        var delayActualCalls = !firstEventLoopDone;\n        function delayIfNecessary(cb) {\n            if (delayActualCalls) {\n                setTimeout(function() {\n                    cb();\n                }, 0);\n            } else {\n                cb();\n            }\n        }\n        var self = this;\n        var listOfFunctionCallsInProxy = [];\n        var requestHeaders = [];\n        var customGetterValues = {};\n        var customResponseHeaders;\n        var eventHandlers = new Map();\n        // We define these during open\n        // let method: string = \"\";\n        var url = \"\";\n        var doNotDoInterception = false;\n        var preRequestIdToken = undefined;\n        var body;\n        // we do not provide onerror cause that is fired only on\n        // network level failures and nothing else. If a status code is > 400,\n        // then onload and onreadystatechange are called.\n        // Setting up props (event handlers) that we use in event handlers\n        // These require processing the response (and possibly retrying) before they are forwarded to the user\n        self.onload = null;\n        self.onreadystatechange = null;\n        self.onloadend = null;\n        // TODO: add support for other event listener options\n        // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#parameters\n        self.addEventListener = function(type, listener, _options) {\n            var handlers = eventHandlers.get(type);\n            if (handlers === undefined) {\n                handlers = new Set();\n                eventHandlers.set(type, handlers);\n            }\n            handlers.add(listener);\n        };\n        self.removeEventListener = function(type, listener) {\n            var handlers = eventHandlers.get(type);\n            if (handlers === undefined) {\n                handlers = new Set();\n                eventHandlers.set(type, handlers);\n            }\n            handlers.delete(listener);\n        };\n        function redispatchEvent(name, ev) {\n            var handlers = eventHandlers.get(name);\n            (0, logger_1.logDebugMessage)(\n                \"XHRInterceptor dispatching \".concat(ev.type, \" to \").concat(handlers ? handlers.size : 0, \" listeners\")\n            );\n            if (handlers) {\n                Array.from(handlers).forEach(function(handler) {\n                    return handler.apply(self, [ev]);\n                });\n            }\n        }\n        function handleRetryPostRefreshing() {\n            return __awaiter(this, void 0, void 0, function() {\n                var refreshResult, retryXhr;\n                return __generator(this, function(_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (preRequestIdToken === undefined) {\n                                throw new Error(\"Should never come here..\");\n                            }\n                            (0,\n                            logger_1.logDebugMessage)(\"XHRInterceptor.handleRetryPostRefreshing: preRequestIdToken \" + preRequestIdToken.status);\n                            return [4 /*yield*/, (0, fetch_1.onUnauthorisedResponse)(preRequestIdToken)];\n                        case 1:\n                            refreshResult = _a.sent();\n                            if (refreshResult.result !== \"RETRY\") {\n                                (0, logger_1.logDebugMessage)(\n                                    \"XHRInterceptor.handleRetryPostRefreshing: Not retrying original request \" +\n                                        !!refreshResult.error\n                                );\n                                if (refreshResult.error !== undefined) {\n                                    // this will cause the responseText of the self to be updated\n                                    // to the error message and make the status code the same as\n                                    // what the error's status code is.\n                                    throw refreshResult.error;\n                                }\n                                // it can come here if refreshResult.result is SESSION_EXPIRED.\n                                // in that case, the status of self is already 401. So we let it\n                                // pass through.\n                                return [2 /*return*/, true];\n                            }\n                            (0,\n                            logger_1.logDebugMessage)(\"XHRInterceptor.handleRetryPostRefreshing: Retrying original request\");\n                            retryXhr = new oldXMLHttpRequest();\n                            setUpXHR(self, retryXhr, true);\n                            // this also calls the send function with the appropriate body\n                            listOfFunctionCallsInProxy.forEach(function(i) {\n                                i(retryXhr);\n                            });\n                            sendXHR(retryXhr, body);\n                            return [2 /*return*/, false];\n                    }\n                });\n            });\n        }\n        function handleResponse(xhr) {\n            return __awaiter(this, void 0, void 0, function() {\n                var status_1, headers, idRefreshToken, antiCsrfToken, tok, frontToken, err_1, resp;\n                return __generator(this, function(_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (doNotDoInterception) {\n                                (0, logger_1.logDebugMessage)(\n                                    \"XHRInterceptor.handleResponse: Returning without interception\"\n                                );\n                                return [2 /*return*/, true];\n                            }\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 20, , 24]);\n                            _a.label = 2;\n                        case 2:\n                            _a.trys.push([2, , 14, 19]);\n                            (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: Interception started\");\n                            processState_1.ProcessState.getInstance().addState(\n                                processState_1.PROCESS_STATE.CALLING_INTERCEPTION_RESPONSE\n                            );\n                            status_1 = xhr.status;\n                            headers = new Headers(\n                                xhr\n                                    .getAllResponseHeaders()\n                                    .trim()\n                                    .split(\"\\r\\n\")\n                                    .map(function(line) {\n                                        return line.split(\": \");\n                                    })\n                            );\n                            idRefreshToken = headers.get(\"id-refresh-token\");\n                            if (!idRefreshToken) return [3 /*break*/, 4];\n                            (0,\n                            logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: Setting sIRTFrontend: \" + idRefreshToken);\n                            return [4 /*yield*/, (0, fetch_1.setIdRefreshToken)(idRefreshToken, status_1)];\n                        case 3:\n                            _a.sent();\n                            _a.label = 4;\n                        case 4:\n                            if (!(status_1 === fetch_1.default.config.sessionExpiredStatusCode))\n                                return [3 /*break*/, 6];\n                            (0, logger_1.logDebugMessage)(\"responseInterceptor: Status code is: \" + status_1);\n                            return [4 /*yield*/, handleRetryPostRefreshing()];\n                        case 5:\n                            return [2 /*return*/, _a.sent()];\n                        case 6:\n                            if (!(status_1 === fetch_1.default.config.invalidClaimStatusCode)) return [3 /*break*/, 8];\n                            return [\n                                4 /*yield*/,\n                                (0, fetch_1.onInvalidClaimResponse)({\n                                    data: JSON.parse(xhr.responseText)\n                                })\n                            ];\n                        case 7:\n                            _a.sent();\n                            _a.label = 8;\n                        case 8:\n                            antiCsrfToken = headers.get(\"anti-csrf\");\n                            if (!antiCsrfToken) return [3 /*break*/, 11];\n                            return [4 /*yield*/, (0, fetch_1.getIdRefreshToken)(true)];\n                        case 9:\n                            tok = _a.sent();\n                            if (!(tok.status === \"EXISTS\")) return [3 /*break*/, 11];\n                            (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: Setting anti-csrf token\");\n                            return [4 /*yield*/, fetch_1.AntiCsrfToken.setItem(tok.token, antiCsrfToken)];\n                        case 10:\n                            _a.sent();\n                            _a.label = 11;\n                        case 11:\n                            frontToken = headers.get(\"front-token\");\n                            if (!frontToken) return [3 /*break*/, 13];\n                            (0,\n                            logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: Setting sFrontToken: \" + frontToken);\n                            return [4 /*yield*/, fetch_1.FrontToken.setItem(frontToken)];\n                        case 12:\n                            _a.sent();\n                            _a.label = 13;\n                        case 13:\n                            return [2 /*return*/, true];\n                        case 14:\n                            (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: doFinallyCheck running\");\n                            return [4 /*yield*/, (0, fetch_1.getIdRefreshToken)(false)];\n                        case 15:\n                            if (!!(_a.sent().status === \"EXISTS\")) return [3 /*break*/, 18];\n                            (0,\n                            logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: sIRTFrontend doesn't exist, so removing anti-csrf and sFrontToken\");\n                            return [4 /*yield*/, fetch_1.AntiCsrfToken.removeToken()];\n                        case 16:\n                            _a.sent();\n                            return [4 /*yield*/, fetch_1.FrontToken.removeToken()];\n                        case 17:\n                            _a.sent();\n                            _a.label = 18;\n                        case 18:\n                            return [7 /*endfinally*/];\n                        case 19:\n                            return [3 /*break*/, 24];\n                        case 20:\n                            err_1 = _a.sent();\n                            (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: caught error\");\n                            if (!(err_1.status !== undefined)) return [3 /*break*/, 22];\n                            return [4 /*yield*/, getXMLHttpStatusAndResponseTextFromFetchResponse(err_1)];\n                        case 21:\n                            resp = _a.sent();\n                            customGetterValues[\"status\"] = resp.status;\n                            customGetterValues[\"statusText\"] = resp.statusText;\n                            customGetterValues[\"responseType\"] = resp.responseType;\n                            customResponseHeaders = resp.headers;\n                            if (resp.responseType === \"json\") {\n                                try {\n                                    customGetterValues[\"response\"] = JSON.parse(resp.responseText);\n                                } catch (_b) {\n                                    customGetterValues[\"response\"] = resp.responseText;\n                                }\n                            } else {\n                                customGetterValues[\"response\"] = resp.responseText;\n                            }\n                            customGetterValues[\"responseText\"] = resp.responseText;\n                            return [3 /*break*/, 23];\n                        case 22:\n                            // Here we only need to handle fetch related errors, from the refresh endpoint called by the retry\n                            // So we should only get network level errors here\n                            redispatchEvent(\"error\", new Event(\"error\"));\n                            _a.label = 23;\n                        case 23:\n                            return [2 /*return*/, true];\n                        case 24:\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        }\n        self.open = function(_, u) {\n            (0, logger_1.logDebugMessage)(\"XHRInterceptor.open called\");\n            var args = arguments;\n            listOfFunctionCallsInProxy.push(function(xhr) {\n                xhr.open.apply(xhr, args);\n            });\n            // method = m;\n            url = u;\n            try {\n                doNotDoInterception =\n                    (typeof url === \"string\" &&\n                        !(0, utils_1.shouldDoInterceptionBasedOnUrl)(\n                            url,\n                            fetch_1.default.config.apiDomain,\n                            fetch_1.default.config.cookieDomain\n                        )) ||\n                    (typeof url !== \"string\" &&\n                        !(0, utils_1.shouldDoInterceptionBasedOnUrl)(\n                            url.toString(),\n                            fetch_1.default.config.apiDomain,\n                            fetch_1.default.config.cookieDomain\n                        ));\n            } catch (err) {\n                if (err.message === \"Please provide a valid domain name\") {\n                    (0, logger_1.logDebugMessage)(\n                        \"XHRInterceptor.open: Trying shouldDoInterceptionBasedOnUrl with location.origin\"\n                    );\n                    // .origin gives the port as well..\n                    doNotDoInterception = !(0, utils_1.shouldDoInterceptionBasedOnUrl)(\n                        windowHandler_1.default.getReferenceOrThrow().windowHandler.location.getOrigin(),\n                        fetch_1.default.config.apiDomain,\n                        fetch_1.default.config.cookieDomain\n                    );\n                } else {\n                    throw err;\n                }\n            }\n            // here we use the apply syntax cause there are other optional args that\n            // can be passed by the user.\n            delayIfNecessary(function() {\n                return actual.open.apply(actual, args);\n            });\n        };\n        self.send = function(inputBody) {\n            body = inputBody;\n            sendXHR(actual, body);\n        };\n        self.setRequestHeader = function(name, value) {\n            if (doNotDoInterception) {\n                delayIfNecessary(function() {\n                    return actual.setRequestHeader(name, value);\n                });\n                return;\n            }\n            // We need to do this, because if there is another interceptor wrapping this (e.g.: the axios interceptor)\n            // then the anti-csrf token they add would be concatenated to the anti-csrf token added by this interceptor\n            if (name === \"anti-csrf\") {\n                return;\n            }\n            listOfFunctionCallsInProxy.push(function(xhr) {\n                xhr.setRequestHeader(name, value);\n            });\n            // The original version \"combines\" headers according to MDN.\n            requestHeaders.push({ name: name, value: value });\n            delayIfNecessary(function() {\n                return actual.setRequestHeader(name, value);\n            });\n        };\n        var copiedProps = undefined;\n        setUpXHR(self, actual, false);\n        function setUpXHR(self, xhr, isRetry) {\n            var responseProcessed;\n            var delayedEvents = [\"load\", \"loadend\", \"readystatechange\"];\n            (0, logger_1.logDebugMessage)(\"XHRInterceptor.setUpXHR called\");\n            var _loop_1 = function(name_1) {\n                (0, logger_1.logDebugMessage)(\"XHRInterceptor added listener for event \".concat(name_1));\n                xhr.addEventListener(name_1, function(ev) {\n                    (0, logger_1.logDebugMessage)(\"XHRInterceptor got event \".concat(name_1));\n                    if (!delayedEvents.includes(name_1)) {\n                        redispatchEvent(name_1, ev);\n                    }\n                });\n            };\n            for (var _i = 0, XHR_EVENTS_1 = XHR_EVENTS; _i < XHR_EVENTS_1.length; _i++) {\n                var name_1 = XHR_EVENTS_1[_i];\n                _loop_1(name_1);\n            }\n            xhr.onload = function(ev) {\n                if (responseProcessed === undefined) {\n                    responseProcessed = handleResponse(xhr);\n                }\n                responseProcessed.then(function(callself) {\n                    if (!callself) {\n                        return;\n                    }\n                    if (self.onload) {\n                        self.onload(ev);\n                    }\n                    redispatchEvent(\"load\", ev);\n                });\n            };\n            xhr.onreadystatechange = function(ev) {\n                // In local files, status is 0 upon success in Mozilla Firefox\n                if (xhr.readyState === oldXMLHttpRequest.DONE) {\n                    if (responseProcessed === undefined) {\n                        responseProcessed = handleResponse(xhr);\n                    }\n                    responseProcessed.then(function(callself) {\n                        if (!callself) {\n                            return;\n                        }\n                        if (self.onreadystatechange) self.onreadystatechange(ev);\n                        redispatchEvent(\"readystatechange\", ev);\n                    });\n                } else {\n                    if (self.onreadystatechange) {\n                        self.onreadystatechange(ev);\n                    }\n                    redispatchEvent(\"readystatechange\", ev);\n                }\n            };\n            xhr.onloadend = function(ev) {\n                if (responseProcessed === undefined) {\n                    responseProcessed = handleResponse(xhr);\n                }\n                responseProcessed.then(function(callself) {\n                    if (!callself) {\n                        return;\n                    }\n                    if (self.onloadend) {\n                        self.onloadend(ev);\n                    }\n                    redispatchEvent(\"loadend\", ev);\n                });\n            };\n            self.getAllResponseHeaders = function() {\n                var headersString;\n                if (customResponseHeaders) {\n                    headersString = \"\";\n                    customResponseHeaders.forEach(function(v, k) {\n                        return (headersString += \"\".concat(k, \": \").concat(v, \"\\r\\n\"));\n                    });\n                } else {\n                    headersString = xhr.getAllResponseHeaders();\n                }\n                // We use this \"fake-header\" to signal other interceptors (axios) that this is done\n                // in case both is applied\n                return headersString + \"x-supertokens-xhr-intercepted: true\\r\\n\";\n            };\n            self.getResponseHeader = function(name) {\n                if (name === \"x-supertokens-xhr-intercepted\") {\n                    return \"true\";\n                }\n                if (customResponseHeaders) {\n                    return customResponseHeaders.get(name);\n                }\n                return xhr.getResponseHeader(name);\n            };\n            if (copiedProps === undefined) {\n                copiedProps = [];\n                // iterate all properties in actual to proxy them according to their type\n                // For functions, we call actual and return the result\n                // For non-functions, we make getters/setters\n                // If the property already exists on self, then don't proxy it\n                for (var prop in xhr) {\n                    // skip properties we already have - this will skip both the above defined properties\n                    // that we don't want to proxy and skip properties on the prototype belonging to Object\n                    if (!(prop in self)) {\n                        // We save these props into an array - in case we need to set up a retry XHR\n                        copiedProps.push(prop);\n                    }\n                }\n            }\n            var _loop_2 = function(prop) {\n                if (typeof xhr[prop] === \"function\") {\n                    // define our own property that calls the same method on the actual\n                    Object.defineProperty(self, prop, {\n                        configurable: true,\n                        value: function() {\n                            var args = arguments;\n                            if (!isRetry) {\n                                listOfFunctionCallsInProxy.push(function(xhr) {\n                                    xhr[prop].apply(xhr, args);\n                                });\n                            }\n                            return xhr[prop].apply(xhr, args);\n                        }\n                    });\n                } else {\n                    // define our own property that just gets or sets the same prop on the actual\n                    Object.defineProperty(self, prop, {\n                        configurable: true,\n                        get: function() {\n                            if (customGetterValues[prop] !== undefined) {\n                                return customGetterValues[prop];\n                            }\n                            return xhr[prop];\n                        },\n                        set: function(val) {\n                            if (!isRetry) {\n                                listOfFunctionCallsInProxy.push(function(xhr) {\n                                    xhr[prop] = val;\n                                });\n                            }\n                            (0, logger_1.logDebugMessage)(\"XHRInterceptor.set[\".concat(prop, \"] = \").concat(val));\n                            xhr[prop] = val;\n                        }\n                    });\n                }\n            };\n            for (var _a = 0, copiedProps_1 = copiedProps; _a < copiedProps_1.length; _a++) {\n                var prop = copiedProps_1[_a];\n                _loop_2(prop);\n            }\n        }\n        function sendXHR(xhr, body) {\n            var _this = this;\n            (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: called\");\n            (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Value of doNotDoInterception: \" + doNotDoInterception);\n            if (doNotDoInterception) {\n                (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Returning without interception\");\n                delayIfNecessary(function() {\n                    return xhr.send(body);\n                });\n                return;\n            }\n            (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Interception started\");\n            processState_1.ProcessState.getInstance().addState(\n                processState_1.PROCESS_STATE.CALLING_INTERCEPTION_REQUEST\n            );\n            delayIfNecessary(function() {\n                return __awaiter(_this, void 0, void 0, function() {\n                    var antiCsrfToken;\n                    return __generator(this, function(_a) {\n                        switch (_a.label) {\n                            case 0:\n                                return [4 /*yield*/, (0, fetch_1.getIdRefreshToken)(true)];\n                            case 1:\n                                preRequestIdToken = _a.sent();\n                                if (!(preRequestIdToken.status === \"EXISTS\")) return [3 /*break*/, 3];\n                                return [4 /*yield*/, fetch_1.AntiCsrfToken.getToken(preRequestIdToken.token)];\n                            case 2:\n                                antiCsrfToken = _a.sent();\n                                if (antiCsrfToken !== undefined) {\n                                    (0, logger_1.logDebugMessage)(\n                                        \"XHRInterceptor.send: Adding anti-csrf token to request\"\n                                    );\n                                    xhr.setRequestHeader(\"anti-csrf\", antiCsrfToken);\n                                }\n                                _a.label = 3;\n                            case 3:\n                                if (fetch_1.default.config.autoAddCredentials) {\n                                    (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Adding credentials include\");\n                                    self.withCredentials = true;\n                                }\n                                if (\n                                    !requestHeaders.some(function(i) {\n                                        return i.name === \"rid\";\n                                    })\n                                ) {\n                                    (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Adding rid header: anti-csrf\");\n                                    xhr.setRequestHeader(\"rid\", \"anti-csrf\");\n                                } else {\n                                    (0, logger_1.logDebugMessage)(\n                                        \"XHRInterceptor.send: rid header was already there in request\"\n                                    );\n                                }\n                                (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Making user's http call\");\n                                return [2 /*return*/, xhr.send(body)];\n                        }\n                    });\n                });\n            });\n        }\n    };\n    XMLHttpRequest.__original = oldXMLHttpRequest;\n}\nexports.addInterceptorsToXMLHttpRequest = addInterceptorsToXMLHttpRequest;\nfunction getXMLHttpStatusAndResponseTextFromFetchResponse(response) {\n    return __awaiter(this, void 0, void 0, function() {\n        var contentType, data, responseType, _a, _b, _c;\n        return __generator(this, function(_d) {\n            switch (_d.label) {\n                case 0:\n                    contentType = response.headers.get(\"content-type\");\n                    data = \"\";\n                    responseType = \"text\";\n                    if (!(contentType === null)) return [3 /*break*/, 5];\n                    _d.label = 1;\n                case 1:\n                    _d.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, response.text()];\n                case 2:\n                    data = _d.sent();\n                    return [3 /*break*/, 4];\n                case 3:\n                    _a = _d.sent();\n                    data = \"\";\n                    return [3 /*break*/, 4];\n                case 4:\n                    return [3 /*break*/, 9];\n                case 5:\n                    if (!contentType.includes(\"application/json\")) return [3 /*break*/, 7];\n                    responseType = \"json\";\n                    _c = (_b = JSON).stringify;\n                    return [4 /*yield*/, response.json()];\n                case 6:\n                    data = _c.apply(_b, [_d.sent()]);\n                    return [3 /*break*/, 9];\n                case 7:\n                    if (!contentType.includes(\"text/\")) return [3 /*break*/, 9];\n                    return [4 /*yield*/, response.text()];\n                case 8:\n                    data = _d.sent();\n                    _d.label = 9;\n                case 9:\n                    return [\n                        2 /*return*/,\n                        {\n                            status: response.status,\n                            responseText: data,\n                            statusText: response.statusText,\n                            responseType: responseType,\n                            headers: response.headers\n                        }\n                    ];\n            }\n        });\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}